import { createClient } from '@supabase/supabase-js';
import dotenv from 'dotenv';

dotenv.config();

const supabase = createClient(
  process.env.VITE_SUPABASE_URL,
  process.env.VITE_SUPABASE_ANON_KEY
);

async function checkTransactions() {
  console.log('üîç Verificando transa√ß√µes no banco...');
  
  try {
    // Buscar transa√ß√µes
    const { data: transactions, error: transError } = await supabase
      .from('transactions')
      .select('*')
      .order('date', { ascending: false });
    
    if (transError) {
      throw transError;
    }
    
    console.log(`üìä Total de transa√ß√µes: ${transactions?.length || 0}`);
    
    if (transactions && transactions.length > 0) {
      console.log('\nüìã Transa√ß√µes encontradas:');
      transactions.forEach((trans, index) => {
        console.log(`${index + 1}. ${trans.description}`);
        console.log(`   üí∞ Valor: R$ ${trans.amount}`);
        console.log(`   üìÖ Data: ${trans.date}`);
        console.log(`   üè∑Ô∏è Categoria: ${trans.category_name}`);
        console.log(`   üìù Tipo: ${trans.type}`);
        console.log(`   üè∑Ô∏è Tags: ${JSON.stringify(trans.tags)}`);
        console.log('   ---');
      });
    } else {
      console.log('‚ö†Ô∏è Nenhuma transa√ß√£o encontrada no banco.');
    }
    
    // Buscar categorias tamb√©m
    const { data: categories, error: catError } = await supabase
      .from('categories')
      .select('*');
    
    if (catError) {
      throw catError;
    }
    
    console.log(`\nüè∑Ô∏è Total de categorias: ${categories?.length || 0}`);
    if (categories && categories.length > 0) {
      console.log('\nüìã Categorias encontradas:');
      categories.forEach((cat, index) => {
        console.log(`${index + 1}. ${cat.name} ${cat.icon} (${cat.type})`);
      });
    }
    
  } catch (error) {
    console.error('‚ùå Erro ao verificar transa√ß√µes:', error);
  }
}

checkTransactions();